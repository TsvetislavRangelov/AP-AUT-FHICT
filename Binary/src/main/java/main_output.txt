Lexer vocabulary:
BINARY_OP
';'
INTEGER
COMMENT

Input line(s): 5+50+0-512/215;
Addition count: 2
Largest integer is: 512

Line: 2 | Type: INTEGER
Line: 2 | Type: BINARY_OP
Line: 2 | Type: INTEGER
Line: 2 | Type: BINARY_OP
Line: 2 | Type: INTEGER
Line: 2 | Type: BINARY_OP
Line: 2 | Type: INTEGER
Line: 2 | Type: BINARY_OP
Line: 2 | Type: INTEGER
Line: 2 | Type: LINE_SEPARATOR

Result: expression is not supported
Exiting Line 5+50+0-512/215;
---------------------------
Input line(s): 6+7+10-120/6*6;
Addition count: 2
Largest integer is: 120

Line: 3 | Type: INTEGER
Line: 3 | Type: BINARY_OP
Line: 3 | Type: INTEGER
Line: 3 | Type: BINARY_OP
Line: 3 | Type: INTEGER
Line: 3 | Type: BINARY_OP
Line: 3 | Type: INTEGER
Line: 3 | Type: BINARY_OP
Line: 3 | Type: INTEGER
Line: 3 | Type: BINARY_OP
Line: 3 | Type: INTEGER
Line: 3 | Type: LINE_SEPARATOR

Result: expression is not supported
Exiting Line 6+7+10-120/6*6;
---------------------------
Input line(s): 6+3+5+9-6+5+4;
Addition count: 5
Largest integer is: 9

Line: 6 | Type: INTEGER
Line: 6 | Type: BINARY_OP
Line: 6 | Type: INTEGER
Line: 6 | Type: BINARY_OP
Line: 6 | Type: INTEGER
Line: 6 | Type: BINARY_OP
Line: 6 | Type: INTEGER
Line: 6 | Type: BINARY_OP
Line: 6 | Type: INTEGER
Line: 6 | Type: BINARY_OP
Line: 6 | Type: INTEGER
Line: 6 | Type: BINARY_OP
Line: 6 | Type: INTEGER
Line: 6 | Type: LINE_SEPARATOR

Result is: 26
Exiting Line 6+3+5+9-6+5+4;
---------------------------
Input line(s): 6*5*3/6*2;
Addition count: 0
Largest integer is: 6

Line: 7 | Type: INTEGER
Line: 7 | Type: BINARY_OP
Line: 7 | Type: INTEGER
Line: 7 | Type: BINARY_OP
Line: 7 | Type: INTEGER
Line: 7 | Type: BINARY_OP
Line: 7 | Type: INTEGER
Line: 7 | Type: BINARY_OP
Line: 7 | Type: INTEGER
Line: 7 | Type: LINE_SEPARATOR

Result is: 30
Exiting Line 6*5*3/6*2;
---------------------------
Input line(s): 5+6<<3;
Addition count: 1
Largest integer is: 6

Line: 8 | Type: INTEGER
Line: 8 | Type: BINARY_OP
Line: 8 | Type: INTEGER
Line: 8 | Type: BINARY_OP
Line: 8 | Type: INTEGER
Line: 8 | Type: LINE_SEPARATOR

Result is: 88
Exiting Line 5+6<<3;
---------------------------
Input line(s): 3*12<<5;
Addition count: 0
Largest integer is: 12

Line: 9 | Type: INTEGER
Line: 9 | Type: BINARY_OP
Line: 9 | Type: INTEGER
Line: 9 | Type: BINARY_OP
Line: 9 | Type: INTEGER
Line: 9 | Type: LINE_SEPARATOR

Result is: 1152
Exiting Line 3*12<<5;
---------------------------
Input line(s): 7+6v5;
Addition count: 1
Largest integer is: 7

Line: 10 | Type: INTEGER
Line: 10 | Type: BINARY_OP
Line: 10 | Type: INTEGER
Line: 10 | Type: BINARY_OP
Line: 10 | Type: INTEGER
Line: 10 | Type: LINE_SEPARATOR

Result is: 8
Exiting Line 7+6v5;
---------------------------
Input line(s): 3*6*8v33;
Addition count: 0
Largest integer is: 33

Line: 11 | Type: INTEGER
Line: 11 | Type: BINARY_OP
Line: 11 | Type: INTEGER
Line: 11 | Type: BINARY_OP
Line: 11 | Type: INTEGER
Line: 11 | Type: BINARY_OP
Line: 11 | Type: INTEGER
Line: 11 | Type: LINE_SEPARATOR

Result is: 177
Exiting Line 3*6*8v33;
---------------------------
Line: 11 | Type: EOF
